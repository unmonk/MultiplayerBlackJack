/*
 * Creative Commons 0
 * The person who associated a work with this deed has dedicated the work to the public domain
 *  by waiving all of his or her rights to the work worldwide under copyright law,
 *  including all related and neighboring rights, to the extent allowed by law.
 */
package blackjack.Server;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;


/**
 *
 * @author Scott
 */
public class DealerForm extends javax.swing.JFrame {

    
    public static boolean gameStarted = false;
    public static boolean startGameButton = false;
    /**
     * Creates new form DealerForm
     */
    public DealerForm() 
    {
        setTitle("Dealer");
        initComponents();
        initDealer();
        
    }
    
    private void initDealer()
    {
           ServerSocket servsocket = null;
        try
        {
            servsocket = new ServerSocket(7776);
            System.out.println("Socket Worked");
        }
        catch(IOException ex)
        {
            DealerTextArea.append(ex.toString());
            System.out.println("Socket Failed");
            ex.printStackTrace();
        }
        gameStarted = false;
        DealerController dealer = new DealerController();
        System.out.println("Starting Thread");
        new Thread(dealer).start();
        System.out.println("Thread Started, gameStarted=" + gameStarted);
        while(gameStarted = false)
        {
            System.out.println("Entered While Loop");
            Socket socket = null;
            try
            {
                socket = servsocket.accept();
                System.out.println("Socket Worked");
            }
            catch(IOException ex)
            {
                DealerTextArea.append("Player Disconnected\n");
                System.out.println("Socket Failed");
                ex.printStackTrace();
            }
            
            PlayerController player = new PlayerController(socket, dealer);
            System.out.println("Player Made");
            dealer.addPlayer(player);
            System.out.println("Player Added");
            System.out.println("ThreadWorked");
        }
                
          
    }
    
    public void appendDealerBox(String message)
    {
        DealerTextArea.append(message);
    }
    
    public static void disableStartGameButton()
    {
        StartGameButton.setVisible(false);
    }
    public void enableStartGameButton()
    {
        StartGameButton.setVisible(true);
    }
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        DealerTextArea = new javax.swing.JTextArea();
        playerCountLabel = new javax.swing.JLabel();
        playerCount = new javax.swing.JLabel();
        StartGameButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        DealerTextArea.setColumns(20);
        DealerTextArea.setRows(5);
        jScrollPane1.setViewportView(DealerTextArea);

        playerCountLabel.setText("Player Count:");

        playerCount.setText("0");

        StartGameButton.setText("Start Game");
        StartGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartGameButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(playerCountLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerCount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 395, Short.MAX_VALUE)
                .addComponent(StartGameButton)
                .addGap(66, 66, 66))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(playerCountLabel)
                        .addComponent(playerCount))
                    .addComponent(StartGameButton))
                .addContainerGap(77, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void StartGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartGameButtonActionPerformed
        startGameButton = true;
    }//GEN-LAST:event_StartGameButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DealerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DealerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DealerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DealerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            public void run() {
                new DealerForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextArea DealerTextArea;
    public static javax.swing.JButton StartGameButton;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel playerCount;
    private javax.swing.JLabel playerCountLabel;
    // End of variables declaration//GEN-END:variables
}
